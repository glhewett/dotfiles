" do not connect to x server
set clipboard=exclude:.*

set modelines=1
set modeline
set nowrap
set nofoldenable

nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-h> <C-w>h
nnoremap <C-l> <C-w>l

let g:netrw_banner = 0

command! -nargs=* Wrap set wrap linebreak nolist tw=0

" Append modeline after last line in buffer.
" Use substitute() instead of printf() to handle '%%s' modeline in LaTeX
" files.
function! AppendModeline()
  let l:modeline = printf(" vim: set ts=%d sw=%d tw=%d %set :",
        \ &tabstop, &shiftwidth, &textwidth, &expandtab ? '' : 'no')
  let l:modeline = substitute(&commentstring, "%s", l:modeline, "")
  call append(line("$"), l:modeline)
endfunction

nnoremap <silent> <Leader>ml :call AppendModeline()<CR>
function! LinterStatus() abort
    let l:counts = ale#statusline#Count(bufnr(''))

    let l:all_errors = l:counts.error + l:counts.style_error
    let l:all_non_errors = l:counts.total - l:all_errors

    return l:counts.total == 0 ? 'OK' : printf(
    \   '%dW %dE',
    \   all_non_errors,
    \   all_errors
    \)
endfunction

set statusline+=%#warningmsg#
set statusline+=%{LinterStatus()}
set statusline+=%*

let g:airline_powerline_fonts = 0

" manage the skeleton files.
autocmd BufNewFile CMakeLists.txt 0r ~/.skeletons/CMakeLists.txt
autocmd BufNewFile *.cpp 0r ~/.skeletons/cpp.cpp
autocmd BufNewFile *.hpp 0r ~/.skeletons/cpp.hpp
autocmd BufNewFile .projections.json 0r ~/.skeletons/projections.json

colorscheme Tomorrow-Night

augroup markdown_files
    autocmd FileType markdown set wrap linebreak nolist tw=0
augroup END

set tags=./tags;/

" reformatting code
function! Format() abort
    :echo "hello, world!"
endfunction
nnoremap <silent> <Leader>f :call Format()<CR>
command Format :call Format()<CR>

"edit vimrc
:nnoremap <leader>ev :vsplit $MYVIMRC.local<cr>
:nnoremap <leader>rv :source $vvVIMRC.local<cr>
"
